{"version":3,"sources":["../../../src/components/geolocate-control.js"],"names":["React","useRef","useEffect","useState","useCallback","useMemo","PropTypes","document","mapboxgl","MapState","TransitionManager","isGeolocationSupported","useMapControl","mapControlDefaultProps","mapControlPropTypes","LINEAR_TRANSITION_PROPS","Object","assign","defaultProps","transitionDuration","noop","propTypes","className","string","style","object","label","disabledLabel","auto","bool","positionOptions","fitBoundsOptions","trackUserLocation","showUserLocation","showAccuracyCircle","onViewStateChange","func","onViewportChange","onGeolocate","enableHighAccuracy","timeout","maxZoom","getBounds","position","center","LngLat","coords","longitude","latitude","radius","accuracy","bounds","toBounds","_ne","lng","lat","_sw","setupMapboxGeolocateControl","context","props","geolocateButton","control","GeolocateControl","_container","createElement","_map","on","_getUIString","_setupUI","map","_geolocateButton","eventManager","options","_watchState","classList","add","remove","updateCamera","viewport","fitBounds","zoom","newViewState","mapState","viewState","getViewportProps","thisRef","containerRef","geolocateButtonRef","mapboxGeolocateControl","createMapboxGeolocateControl","supportsGeolocation","setSupportsGeolocation","then","result","current","_updateCamera","_clearWatch","triggerGeolocate","trigger","_onZoom","memo"],"mappings":";;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAAQC,MAAR,EAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,WAArC,EAAkDC,OAAlD,QAAgE,OAAhE;AACA,OAAO,KAAKC,SAAZ,MAA2B,YAA3B;AAEA,SAAQC,QAAR,QAAuB,kBAAvB;AACA,OAAOC,QAAP,MAAqB,mBAArB;AAEA,OAAOC,QAAP,MAAqB,oBAArB;AACA,OAAOC,iBAAP,MAA8B,6BAA9B;AACA,SAAQC,sBAAR,QAAqC,0BAArC;AAEA,OAAOC,aAAP,IAAuBC,sBAAvB,EAA+CC,mBAA/C,QAAyE,mBAAzE;AAEA,IAAMC,uBAAuB,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBP,iBAAiB,CAACQ,YAApC,EAAkD;AAChFC,EAAAA,kBAAkB,EAAE;AAD4D,CAAlD,CAAhC;;AAIA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM,CAAE,CAArB;;AAEA,IAAMC,SAAS,GAAGL,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBH,mBAAlB,EAAuC;AAEvDQ,EAAAA,SAAS,EAAEhB,SAAS,CAACiB,MAFkC;AAGvDC,EAAAA,KAAK,EAAElB,SAAS,CAACmB,MAHsC;AAKvDC,EAAAA,KAAK,EAAEpB,SAAS,CAACiB,MALsC;AAMvDI,EAAAA,aAAa,EAAErB,SAAS,CAACiB,MAN8B;AAQvDK,EAAAA,IAAI,EAAEtB,SAAS,CAACuB,IARuC;AAYvDC,EAAAA,eAAe,EAAExB,SAAS,CAACmB,MAZ4B;AAavDM,EAAAA,gBAAgB,EAAEzB,SAAS,CAACmB,MAb2B;AAcvDO,EAAAA,iBAAiB,EAAE1B,SAAS,CAACuB,IAd0B;AAevDI,EAAAA,gBAAgB,EAAE3B,SAAS,CAACuB,IAf2B;AAgBvDK,EAAAA,kBAAkB,EAAE5B,SAAS,CAACuB,IAhByB;AAoBvDM,EAAAA,iBAAiB,EAAE7B,SAAS,CAAC8B,IApB0B;AAqBvDC,EAAAA,gBAAgB,EAAE/B,SAAS,CAAC8B,IArB2B;AAuBvDE,EAAAA,WAAW,EAAEhC,SAAS,CAAC8B;AAvBgC,CAAvC,CAAlB;AA0BA,IAAMlB,YAAY,GAAGF,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,sBAAlB,EAA0C;AAC7DS,EAAAA,SAAS,EAAE,EADkD;AAE7DI,EAAAA,KAAK,EAAE,kBAFsD;AAG7DC,EAAAA,aAAa,EAAE,wBAH8C;AAI7DC,EAAAA,IAAI,EAAE,KAJuD;AAO7DE,EAAAA,eAAe,EAAE;AAACS,IAAAA,kBAAkB,EAAE,KAArB;AAA4BC,IAAAA,OAAO,EAAE;AAArC,GAP4C;AAQ7DT,EAAAA,gBAAgB,EAAE;AAACU,IAAAA,OAAO,EAAE;AAAV,GAR2C;AAS7DT,EAAAA,iBAAiB,EAAE,KAT0C;AAU7DC,EAAAA,gBAAgB,EAAE,IAV2C;AAW7DC,EAAAA,kBAAkB,EAAE,IAXyC;AAa7DI,EAAAA,WAAW,EAAE,uBAAM,CAAE;AAbwC,CAA1C,CAArB;;AAgBA,SAASI,SAAT,CAAmBC,QAAnB,EAA6B;AAC3B,MAAMC,MAAM,GAAG,IAAIpC,QAAQ,CAACqC,MAAb,CAAoBF,QAAQ,CAACG,MAAT,CAAgBC,SAApC,EAA+CJ,QAAQ,CAACG,MAAT,CAAgBE,QAA/D,CAAf;AACA,MAAMC,MAAM,GAAGN,QAAQ,CAACG,MAAT,CAAgBI,QAA/B;AACA,MAAMC,MAAM,GAAGP,MAAM,CAACQ,QAAP,CAAgBH,MAAhB,CAAf;AAEA,SAAO,CACL,CAACE,MAAM,CAACE,GAAP,CAAWC,GAAZ,EAAiBH,MAAM,CAACE,GAAP,CAAWE,GAA5B,CADK,EAEL,CAACJ,MAAM,CAACK,GAAP,CAAWF,GAAZ,EAAiBH,MAAM,CAACK,GAAP,CAAWD,GAA5B,CAFK,CAAP;AAID;;AAED,SAASE,2BAAT,CAAqCC,OAArC,EAA8CC,KAA9C,EAAqDC,eAArD,EAAsE;AACpE,MAAMC,OAAO,GAAG,IAAIrD,QAAQ,CAACsD,gBAAb,CAA8BH,KAA9B,CAAhB;AAGAE,EAAAA,OAAO,CAACE,UAAR,GAAqBxD,QAAQ,CAACyD,aAAT,CAAuB,KAAvB,CAArB;AACAH,EAAAA,OAAO,CAACI,IAAR,GAAe;AACbC,IAAAA,EAAE,EAAE,cAAM,CAAE,CADC;AAEbC,IAAAA,YAAY,EAAE;AAAA,aAAM,EAAN;AAAA;AAFD,GAAf;;AAIAN,EAAAA,OAAO,CAACO,QAAR,CAAiB,IAAjB;;AACAP,EAAAA,OAAO,CAACI,IAAR,GAAeP,OAAO,CAACW,GAAvB;AAGAR,EAAAA,OAAO,CAACS,gBAAR,GAA2BV,eAA3B;AAboE,MAkB7DW,YAlB6D,GAkB7Cb,OAlB6C,CAkB7Da,YAlB6D;;AAmBpE,MAAIV,OAAO,CAACW,OAAR,CAAgBxC,iBAAhB,IAAqCuC,YAAzC,EAAuD;AACrDA,IAAAA,YAAY,CAACL,EAAb,CAAgB,UAAhB,EAA4B,YAAM;AAChC,UAAIL,OAAO,CAACY,WAAR,KAAwB,aAA5B,EAA2C;AACzCZ,QAAAA,OAAO,CAACY,WAAR,GAAsB,YAAtB;AACAb,QAAAA,eAAe,CAACc,SAAhB,CAA0BC,GAA1B,CAA8B,oCAA9B;AACAf,QAAAA,eAAe,CAACc,SAAhB,CAA0BE,MAA1B,CAAiC,gCAAjC;AACD;AACF,KAND;AAOD;;AAEDf,EAAAA,OAAO,CAACK,EAAR,CAAW,WAAX,EAAwBP,KAAK,CAACrB,WAA9B;AACA,SAAOuB,OAAP;AACD;;AAED,SAASgB,YAAT,CAAsBlC,QAAtB,QAAkD;AAAA,MAAjBe,OAAiB,QAAjBA,OAAiB;AAAA,MAARC,KAAQ,QAARA,KAAQ;AAChD,MAAMR,MAAM,GAAGT,SAAS,CAACC,QAAD,CAAxB;;AADgD,8BAEZe,OAAO,CAACoB,QAAR,CAAiBC,SAAjB,CAA2B5B,MAA3B,EAAmCQ,KAAK,CAAC5B,gBAAzC,CAFY;AAAA,MAEzCgB,SAFyC,yBAEzCA,SAFyC;AAAA,MAE9BC,QAF8B,yBAE9BA,QAF8B;AAAA,MAEpBgC,IAFoB,yBAEpBA,IAFoB;;AAIhD,MAAMC,YAAY,GAAGjE,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkByC,OAAO,CAACoB,QAA1B,EAAoC;AACvD/B,IAAAA,SAAS,EAATA,SADuD;AAEvDC,IAAAA,QAAQ,EAARA,QAFuD;AAGvDgC,IAAAA,IAAI,EAAJA;AAHuD,GAApC,CAArB;AAKA,MAAME,QAAQ,GAAG,IAAIzE,QAAJ,CAAawE,YAAb,CAAjB;AACA,MAAME,SAAS,GAAGnE,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBiE,QAAQ,CAACE,gBAAT,EAAlB,EAA+CrE,uBAA/C,CAAlB;AAEA,MAAMsB,gBAAgB,GAAGsB,KAAK,CAACtB,gBAAN,IAA0BqB,OAAO,CAACrB,gBAAlC,IAAsDjB,IAA/E;AACA,MAAMe,iBAAiB,GAAGwB,KAAK,CAACxB,iBAAN,IAA2BuB,OAAO,CAACvB,iBAAnC,IAAwDf,IAAlF;AAGAe,EAAAA,iBAAiB,CAAC;AAACgD,IAAAA,SAAS,EAATA;AAAD,GAAD,CAAjB;AAGA9C,EAAAA,gBAAgB,CAAC8C,SAAD,CAAhB;AACD;;AAED,SAASrB,gBAAT,CAA0BH,KAA1B,EAAiC;AAC/B,MAAM0B,OAAO,GAAGzE,aAAa,CAAC+C,KAAD,CAA7B;AAD+B,MAExBD,OAFwB,GAEC2B,OAFD,CAExB3B,OAFwB;AAAA,MAEf4B,YAFe,GAECD,OAFD,CAEfC,YAFe;AAG/B,MAAMC,kBAAkB,GAAGtF,MAAM,CAAC,IAAD,CAAjC;;AAH+B,kBAIgCE,QAAQ,CAAC,IAAD,CAJxC;AAAA;AAAA,MAIxBqF,sBAJwB;AAAA,MAIAC,4BAJA;;AAAA,mBAKuBtF,QAAQ,CAAC,KAAD,CAL/B;AAAA;AAAA,MAKxBuF,mBALwB;AAAA,MAKHC,sBALG;;AAO/BzF,EAAAA,SAAS,CAAC,YAAM;AACd,QAAI2D,OAAJ;;AAEA,QAAIH,OAAO,CAACW,GAAZ,EAAiB;AACf1D,MAAAA,sBAAsB,GAAGiF,IAAzB,CAA8B,UAAAC,MAAM,EAAI;AACtCF,QAAAA,sBAAsB,CAACE,MAAD,CAAtB;;AAEA,YAAIN,kBAAkB,CAACO,OAAvB,EAAgC;AAC9BjC,UAAAA,OAAO,GAAGJ,2BAA2B,CAACC,OAAD,EAAUC,KAAV,EAAiB4B,kBAAkB,CAACO,OAApC,CAArC;;AAEAjC,UAAAA,OAAO,CAACkC,aAAR,GAAwB,UAAApD,QAAQ;AAAA,mBAAIkC,YAAY,CAAClC,QAAD,EAAW0C,OAAX,CAAhB;AAAA,WAAhC;;AACAI,UAAAA,4BAA4B,CAAC5B,OAAD,CAA5B;AACD;AACF,OATD;AAUD;;AAED,WAAO,YAAM;AACX,UAAIA,OAAJ,EAAa;AACXA,QAAAA,OAAO,CAACmC,WAAR;AACD;AACF,KAJD;AAKD,GArBQ,EAqBN,CAACtC,OAAO,CAACW,GAAT,CArBM,CAAT;AAuBA,MAAM4B,gBAAgB,GAAG7F,WAAW,CAAC,YAAM;AACzC,QAAIoF,sBAAJ,EAA4B;AAC1BA,MAAAA,sBAAsB,CAAChB,OAAvB,GAAiCa,OAAO,CAAC1B,KAAzC;AACA6B,MAAAA,sBAAsB,CAACU,OAAvB;AACD;AACF,GALmC,EAKjC,CAACV,sBAAD,CALiC,CAApC;AAOAtF,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIyD,KAAK,CAAC/B,IAAV,EAAgB;AACdqE,MAAAA,gBAAgB;AACjB;AACF,GAJQ,EAIN,CAACT,sBAAD,EAAyB7B,KAAK,CAAC/B,IAA/B,CAJM,CAAT;AAMA1B,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIsF,sBAAJ,EAA4B;AAC1BA,MAAAA,sBAAsB,CAACW,OAAvB;AACD;AACF,GAJQ,EAIN,CAACzC,OAAO,CAACoB,QAAR,CAAiBE,IAAlB,CAJM,CAAT;AA3C+B,MAiDxB1D,SAjDwB,GAiD8BqC,KAjD9B,CAiDxBrC,SAjDwB;AAAA,MAiDbI,KAjDa,GAiD8BiC,KAjD9B,CAiDbjC,KAjDa;AAAA,MAiDNC,aAjDM,GAiD8BgC,KAjD9B,CAiDNhC,aAjDM;AAAA,MAiDSK,iBAjDT,GAiD8B2B,KAjD9B,CAiDS3B,iBAjDT;AAmD/B,MAAMR,KAAK,GAAGnB,OAAO,CAAC;AAAA;AAAQsC,MAAAA,QAAQ,EAAE;AAAlB,OAAiCgB,KAAK,CAACnC,KAAvC;AAAA,GAAD,EAAiD,CAACmC,KAAK,CAACnC,KAAP,CAAjD,CAArB;AAEA,SACE;AAAK,IAAA,KAAK,EAAEA,KAAZ;AAAmB,IAAA,SAAS,EAAEF;AAA9B,KACE;AAAK,IAAA,GAAG,EAAC,mBAAT;AAA6B,IAAA,SAAS,EAAC,mCAAvC;AAA2E,IAAA,GAAG,EAAEgE;AAAhF,KACE;AACE,IAAA,GAAG,EAAC,WADN;AAEE,IAAA,SAAS,8CAFX;AAGE,IAAA,GAAG,EAAEC,kBAHP;AAIE,IAAA,QAAQ,EAAE,CAACG,mBAJb;AAKE,oBAAc,CAAC1D,iBALjB;AAME,IAAA,IAAI,EAAC,QANP;AAOE,IAAA,KAAK,EAAE0D,mBAAmB,GAAGhE,KAAH,GAAWC,aAPvC;AAQE,kBAAY+D,mBAAmB,GAAGhE,KAAH,GAAWC,aAR5C;AASE,IAAA,OAAO,EAAEsE;AATX,KAWE;AAAM,IAAA,SAAS,EAAC,oBAAhB;AAAqC,mBAAY;AAAjD,IAXF,CADF,CADF,CADF;AAmBD;;AAEDnC,gBAAgB,CAACzC,SAAjB,GAA6BA,SAA7B;AACAyC,gBAAgB,CAAC5C,YAAjB,GAAgCA,YAAhC;AAEA,eAAelB,KAAK,CAACoG,IAAN,CAAWtC,gBAAX,CAAf","sourcesContent":["import * as React from 'react';\nimport {useRef, useEffect, useState, useCallback, useMemo} from 'react';\nimport * as PropTypes from 'prop-types';\n\nimport {document} from '../utils/globals';\nimport mapboxgl from '../utils/mapboxgl';\n\nimport MapState from '../utils/map-state';\nimport TransitionManager from '../utils/transition-manager';\nimport {isGeolocationSupported} from '../utils/geolocate-utils';\n\nimport useMapControl, {mapControlDefaultProps, mapControlPropTypes} from './use-map-control';\n\nconst LINEAR_TRANSITION_PROPS = Object.assign({}, TransitionManager.defaultProps, {\n  transitionDuration: 500\n});\n\nconst noop = () => {};\n\nconst propTypes = Object.assign({}, mapControlPropTypes, {\n  // Custom className\n  className: PropTypes.string,\n  style: PropTypes.object,\n  // Custom label assigned to the control\n  label: PropTypes.string,\n  disabledLabel: PropTypes.string,\n  // Auto trigger instead of waiting for click\n  auto: PropTypes.bool,\n\n  // mapbox geolocate options\n  // https://docs.mapbox.com/mapbox-gl-js/api/#geolocatecontrol\n  positionOptions: PropTypes.object,\n  fitBoundsOptions: PropTypes.object,\n  trackUserLocation: PropTypes.bool,\n  showUserLocation: PropTypes.bool,\n  showAccuracyCircle: PropTypes.bool,\n\n  // Callbacks fired when the user interacted with the map. The object passed to the callbacks\n  // contains viewport properties such as `longitude`, `latitude`, `zoom` etc.\n  onViewStateChange: PropTypes.func,\n  onViewportChange: PropTypes.func,\n\n  onGeolocate: PropTypes.func\n});\n\nconst defaultProps = Object.assign({}, mapControlDefaultProps, {\n  className: '',\n  label: 'Find My Location',\n  disabledLabel: 'Location Not Available',\n  auto: false,\n\n  // mapbox geolocate options\n  positionOptions: {enableHighAccuracy: false, timeout: 6000},\n  fitBoundsOptions: {maxZoom: 15},\n  trackUserLocation: false,\n  showUserLocation: true,\n  showAccuracyCircle: true,\n\n  onGeolocate: () => {}\n});\n\nfunction getBounds(position) {\n  const center = new mapboxgl.LngLat(position.coords.longitude, position.coords.latitude);\n  const radius = position.coords.accuracy;\n  const bounds = center.toBounds(radius);\n\n  return [\n    [bounds._ne.lng, bounds._ne.lat],\n    [bounds._sw.lng, bounds._sw.lat]\n  ];\n}\n\nfunction setupMapboxGeolocateControl(context, props, geolocateButton) {\n  const control = new mapboxgl.GeolocateControl(props);\n\n  // Dummy placeholders so that _setupUI does not crash\n  control._container = document.createElement('div');\n  control._map = {\n    on: () => {},\n    _getUIString: () => ''\n  };\n  control._setupUI(true);\n  control._map = context.map;\n\n  // replace mapbox internal UI elements with ours\n  control._geolocateButton = geolocateButton;\n\n  // From _setupUI\n  // when the camera is changed (and it's not as a result of the Geolocation Control) change\n  // the watch mode to background watch, so that the marker is updated but not the camera.\n  const {eventManager} = context;\n  if (control.options.trackUserLocation && eventManager) {\n    eventManager.on('panstart', () => {\n      if (control._watchState === 'ACTIVE_LOCK') {\n        control._watchState = 'BACKGROUND';\n        geolocateButton.classList.add('mapboxgl-ctrl-geolocate-background');\n        geolocateButton.classList.remove('mapboxgl-ctrl-geolocate-active');\n      }\n    });\n  }\n\n  control.on('geolocate', props.onGeolocate);\n  return control;\n}\n\nfunction updateCamera(position, {context, props}) {\n  const bounds = getBounds(position);\n  const {longitude, latitude, zoom} = context.viewport.fitBounds(bounds, props.fitBoundsOptions);\n\n  const newViewState = Object.assign({}, context.viewport, {\n    longitude,\n    latitude,\n    zoom\n  });\n  const mapState = new MapState(newViewState);\n  const viewState = Object.assign({}, mapState.getViewportProps(), LINEAR_TRANSITION_PROPS);\n\n  const onViewportChange = props.onViewportChange || context.onViewportChange || noop;\n  const onViewStateChange = props.onViewStateChange || context.onViewStateChange || noop;\n\n  // Call new style callback\n  onViewStateChange({viewState});\n\n  // Call old style callback\n  onViewportChange(viewState);\n}\n\nfunction GeolocateControl(props) {\n  const thisRef = useMapControl(props);\n  const {context, containerRef} = thisRef;\n  const geolocateButtonRef = useRef(null);\n  const [mapboxGeolocateControl, createMapboxGeolocateControl] = useState(null);\n  const [supportsGeolocation, setSupportsGeolocation] = useState(false);\n\n  useEffect(() => {\n    let control;\n\n    if (context.map) {\n      isGeolocationSupported().then(result => {\n        setSupportsGeolocation(result);\n\n        if (geolocateButtonRef.current) {\n          control = setupMapboxGeolocateControl(context, props, geolocateButtonRef.current);\n          // Overwrite Mapbox's GeolocateControl internal method\n          control._updateCamera = position => updateCamera(position, thisRef);\n          createMapboxGeolocateControl(control);\n        }\n      });\n    }\n\n    return () => {\n      if (control) {\n        control._clearWatch();\n      }\n    };\n  }, [context.map]);\n\n  const triggerGeolocate = useCallback(() => {\n    if (mapboxGeolocateControl) {\n      mapboxGeolocateControl.options = thisRef.props;\n      mapboxGeolocateControl.trigger();\n    }\n  }, [mapboxGeolocateControl]);\n\n  useEffect(() => {\n    if (props.auto) {\n      triggerGeolocate();\n    }\n  }, [mapboxGeolocateControl, props.auto]);\n\n  useEffect(() => {\n    if (mapboxGeolocateControl) {\n      mapboxGeolocateControl._onZoom();\n    }\n  }, [context.viewport.zoom]);\n\n  const {className, label, disabledLabel, trackUserLocation} = props;\n\n  const style = useMemo(() => ({position: 'absolute', ...props.style}), [props.style]);\n\n  return (\n    <div style={style} className={className}>\n      <div key=\"geolocate-control\" className=\"mapboxgl-ctrl mapboxgl-ctrl-group\" ref={containerRef}>\n        <button\n          key=\"geolocate\"\n          className={`mapboxgl-ctrl-icon mapboxgl-ctrl-geolocate`}\n          ref={geolocateButtonRef}\n          disabled={!supportsGeolocation}\n          aria-pressed={!trackUserLocation}\n          type=\"button\"\n          title={supportsGeolocation ? label : disabledLabel}\n          aria-label={supportsGeolocation ? label : disabledLabel}\n          onClick={triggerGeolocate}\n        >\n          <span className=\"mapboxgl-ctrl-icon\" aria-hidden=\"true\" />\n        </button>\n      </div>\n    </div>\n  );\n}\n\nGeolocateControl.propTypes = propTypes;\nGeolocateControl.defaultProps = defaultProps;\n\nexport default React.memo(GeolocateControl);\n"],"file":"geolocate-control.js"}