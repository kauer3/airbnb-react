{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LENOVO\\\\Documents\\\\VSCode\\\\airbnb-clone\\\\airbnb-web\\\\src\\\\pages\\\\App\\\\index.js\";\nimport React, { Component } from \"react\"; // import Dimensions from \"react-dimensions\"; // TODO can't install react-dimensions\n\nimport { Container } from \"./styles\";\nimport MapGL from \"react-map-gl\";\nimport PropTypes from \"prop-types\";\nimport debounce from \"lodash/debounce\";\nimport api from \"../../services/api\";\nimport Properties from \"./components/Properties\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TOKEN = \"pk.eyJ1Ijoia2F1ZXIzIiwiYSI6ImNrbm8za2M1cDEya2Yyb3BlcDZmcTA4a2oifQ.2TyL3eWNmHlGeaAwD0BweA\";\n\nclass Map extends Component {\n  constructor() {\n    super();\n    this.state = {\n      viewport: {\n        latitude: -27.2108001,\n        longitude: -49.6446024,\n        zoom: 12.8,\n        bearing: 0,\n        pitch: 0\n      },\n      properties: []\n    };\n\n    this.loadProperties = async () => {\n      const {\n        latitude,\n        longitude\n      } = this.state.viewport;\n\n      try {\n        const response = await api.get(\"/properties\", {\n          params: {\n            latitude,\n            longitude\n          }\n        });\n        this.setState({\n          properties: response.data\n        });\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    this.updatePropertiesLocalization = debounce(this.updatePropertiesLocalization, 500);\n  }\n\n  componentDidMount() {\n    this.loadProperties();\n  }\n\n  updatePropertiesLocalization() {\n    this.loadProperties();\n  }\n\n  render() {\n    // const { containerWidth: width, containerHeight: height } = this.props;\n    const {\n      properties\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(MapGL // width={width}\n    // height={height}\n    // Hardcode size values so map can be displayed without react-dimensions\n    , {\n      width: \"1370px\",\n      height: \"650px\",\n      ...this.state.viewport,\n      mapStyle: \"mapbox://styles/mapbox/dark-v9\",\n      mapboxApiAccessToken: TOKEN,\n      onViewportChange: viewport => this.setState({\n        viewport\n      }),\n      onViewStateChange: this.updatePropertiesLocalization.bind(this),\n      children: /*#__PURE__*/_jsxDEV(Properties, {\n        properties: properties\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this);\n  }\n\n} // const DimensionedMap = Dimensions()(Map); // TODO can't install react-dimensions\n\n\nMap.propTypes = {\n  containerWidth: PropTypes.number.isRequired,\n  containerHeight: PropTypes.number.isRequired\n};\nconst DimensionedMap = Map;\n\nconst App = () => /*#__PURE__*/_jsxDEV(Container, {\n  children: /*#__PURE__*/_jsxDEV(DimensionedMap, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 85,\n  columnNumber: 3\n}, this);\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/LENOVO/Documents/VSCode/airbnb-clone/airbnb-web/src/pages/App/index.js"],"names":["React","Component","Container","MapGL","PropTypes","debounce","api","Properties","TOKEN","Map","constructor","state","viewport","latitude","longitude","zoom","bearing","pitch","properties","loadProperties","response","get","params","setState","data","err","console","log","updatePropertiesLocalization","componentDidMount","render","bind","propTypes","containerWidth","number","isRequired","containerHeight","DimensionedMap","App"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B,C,CACA;;AACA,SAAQC,SAAR,QAAwB,UAAxB;AACA,OAAOC,KAAP,MAAkB,cAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,OAAOC,GAAP,MAAgB,oBAAhB;AAEA,OAAOC,UAAP,MAAuB,yBAAvB;;AAEA,MAAMC,KAAK,GACT,0FADF;;AAGA,MAAMC,GAAN,SAAkBR,SAAlB,CAA4B;AAM1BS,EAAAA,WAAW,GAAG;AACZ;AADY,SAQdC,KARc,GAQN;AACNC,MAAAA,QAAQ,EAAE;AACRC,QAAAA,QAAQ,EAAE,CAAC,UADH;AAERC,QAAAA,SAAS,EAAE,CAAC,UAFJ;AAGRC,QAAAA,IAAI,EAAE,IAHE;AAIRC,QAAAA,OAAO,EAAE,CAJD;AAKRC,QAAAA,KAAK,EAAE;AALC,OADJ;AASNC,MAAAA,UAAU,EAAE;AATN,KARM;;AAAA,SA4BdC,cA5Bc,GA4BG,YAAY;AAC3B,YAAM;AAAEN,QAAAA,QAAF;AAAYC,QAAAA;AAAZ,UAA0B,KAAKH,KAAL,CAAWC,QAA3C;;AACA,UAAI;AACF,cAAMQ,QAAQ,GAAG,MAAMd,GAAG,CAACe,GAAJ,CAAQ,aAAR,EAAuB;AAC5CC,UAAAA,MAAM,EAAE;AAAET,YAAAA,QAAF;AAAYC,YAAAA;AAAZ;AADoC,SAAvB,CAAvB;AAGA,aAAKS,QAAL,CAAc;AAAEL,UAAAA,UAAU,EAAEE,QAAQ,CAACI;AAAvB,SAAd;AACD,OALD,CAKE,OAAOC,GAAP,EAAY;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;AACF,KAtCa;;AAEZ,SAAKG,4BAAL,GAAoCvB,QAAQ,CAC1C,KAAKuB,4BADqC,EAE1C,GAF0C,CAA5C;AAID;;AAcDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKV,cAAL;AACD;;AAEDS,EAAAA,4BAA4B,GAAG;AAC7B,SAAKT,cAAL;AACD;;AAcDW,EAAAA,MAAM,GAAG;AACP;AACA,UAAM;AAACZ,MAAAA;AAAD,QAAe,KAAKP,KAA1B;AACA,wBACE,QAAC,KAAD,CACE;AACA;AACA;AAHF;AAIE,MAAA,KAAK,EAAC,QAJR;AAKE,MAAA,MAAM,EAAC,OALT;AAAA,SAMM,KAAKA,KAAL,CAAWC,QANjB;AAOE,MAAA,QAAQ,EAAC,gCAPX;AAQE,MAAA,oBAAoB,EAAEJ,KARxB;AASE,MAAA,gBAAgB,EAAEI,QAAQ,IAAI,KAAKW,QAAL,CAAc;AAACX,QAAAA;AAAD,OAAd,CAThC;AAUE,MAAA,iBAAiB,EAAE,KAAKgB,4BAAL,CAAkCG,IAAlC,CAAuC,IAAvC,CAVrB;AAAA,6BAYE,QAAC,UAAD;AAAY,QAAA,UAAU,EAAEb;AAAxB;AAAA;AAAA;AAAA;AAAA;AAZF;AAAA;AAAA;AAAA;AAAA,YADF;AAgBD;;AAjEyB,C,CAoE5B;;;AApEMT,G,CACGuB,S,GAAY;AACjBC,EAAAA,cAAc,EAAE7B,SAAS,CAAC8B,MAAV,CAAiBC,UADhB;AAEjBC,EAAAA,eAAe,EAAEhC,SAAS,CAAC8B,MAAV,CAAiBC;AAFjB,C;AAoErB,MAAME,cAAc,GAAG5B,GAAvB;;AACA,MAAM6B,GAAG,GAAG,mBACV,QAAC,SAAD;AAAA,yBACE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADF;;KAAMA,G;AAMN,eAAeA,GAAf","sourcesContent":["import React, {Component} from \"react\";\n// import Dimensions from \"react-dimensions\"; // TODO can't install react-dimensions\nimport {Container} from \"./styles\";\nimport MapGL from \"react-map-gl\";\nimport PropTypes from \"prop-types\";\nimport debounce from \"lodash/debounce\";\nimport api from \"../../services/api\";\n\nimport Properties from \"./components/Properties\";\n\nconst TOKEN =\n  \"pk.eyJ1Ijoia2F1ZXIzIiwiYSI6ImNrbm8za2M1cDEya2Yyb3BlcDZmcTA4a2oifQ.2TyL3eWNmHlGeaAwD0BweA\";\n\nclass Map extends Component {\n  static propTypes = {\n    containerWidth: PropTypes.number.isRequired,\n    containerHeight: PropTypes.number.isRequired\n  };\n\n  constructor() {\n    super();\n    this.updatePropertiesLocalization = debounce(\n      this.updatePropertiesLocalization,\n      500\n    );\n  }\n\n  state = {\n    viewport: {\n      latitude: -27.2108001,\n      longitude: -49.6446024,\n      zoom: 12.8,\n      bearing: 0,\n      pitch: 0\n    },\n\n    properties: []\n  };\n\n  componentDidMount() {\n    this.loadProperties();\n  }\n\n  updatePropertiesLocalization() {\n    this.loadProperties();\n  }\n\n  loadProperties = async () => {\n    const { latitude, longitude } = this.state.viewport;\n    try {\n      const response = await api.get(\"/properties\", {\n        params: { latitude, longitude }\n      });\n      this.setState({ properties: response.data });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  render() {\n    // const { containerWidth: width, containerHeight: height } = this.props;\n    const {properties} = this.state;\n    return (\n      <MapGL\n        // width={width}\n        // height={height}\n        // Hardcode size values so map can be displayed without react-dimensions\n        width=\"1370px\"\n        height=\"650px\"\n        {...this.state.viewport}\n        mapStyle=\"mapbox://styles/mapbox/dark-v9\"\n        mapboxApiAccessToken={TOKEN}\n        onViewportChange={viewport => this.setState({viewport})}\n        onViewStateChange={this.updatePropertiesLocalization.bind(this)}\n      >\n        <Properties properties={properties} />\n      </MapGL>\n    );\n  }\n}\n\n// const DimensionedMap = Dimensions()(Map); // TODO can't install react-dimensions\nconst DimensionedMap = Map;\nconst App = () => (\n  <Container>\n    <DimensionedMap />\n  </Container>\n);\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}