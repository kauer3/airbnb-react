{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nimport assert from '../assert';\nimport TransitionInterpolator from './transition-interpolator';\nimport { flyToViewport, getFlyToDuration } from 'viewport-mercator-project';\nimport { isValid, getEndValueByShortestPath } from './transition-utils';\nimport { lerp } from '../math-utils';\nvar VIEWPORT_TRANSITION_PROPS = ['longitude', 'latitude', 'zoom', 'bearing', 'pitch'];\nvar REQUIRED_PROPS = ['latitude', 'longitude', 'zoom', 'width', 'height'];\nvar LINEARLY_INTERPOLATED_PROPS = ['bearing', 'pitch'];\nvar DEFAULT_OPTS = {\n  speed: 1.2,\n  curve: 1.414\n};\n\nvar ViewportFlyToInterpolator = function (_TransitionInterpolat) {\n  _inherits(ViewportFlyToInterpolator, _TransitionInterpolat);\n\n  var _super = _createSuper(ViewportFlyToInterpolator);\n\n  function ViewportFlyToInterpolator() {\n    var _this;\n\n    var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, ViewportFlyToInterpolator);\n\n    _this = _super.call(this);\n\n    _defineProperty(_assertThisInitialized(_this), \"propNames\", VIEWPORT_TRANSITION_PROPS);\n\n    _this.props = Object.assign({}, DEFAULT_OPTS, props);\n    return _this;\n  }\n\n  _createClass(ViewportFlyToInterpolator, [{\n    key: \"initializeProps\",\n    value: function initializeProps(startProps, endProps) {\n      var startViewportProps = {};\n      var endViewportProps = {};\n\n      var _iterator = _createForOfIteratorHelper(REQUIRED_PROPS),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var key = _step.value;\n          var startValue = startProps[key];\n          var endValue = endProps[key];\n          assert(isValid(startValue) && isValid(endValue), \"\".concat(key, \" must be supplied for transition\"));\n          startViewportProps[key] = startValue;\n          endViewportProps[key] = getEndValueByShortestPath(key, startValue, endValue);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      var _iterator2 = _createForOfIteratorHelper(LINEARLY_INTERPOLATED_PROPS),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var _key = _step2.value;\n\n          var _startValue = startProps[_key] || 0;\n\n          var _endValue = endProps[_key] || 0;\n\n          startViewportProps[_key] = _startValue;\n          endViewportProps[_key] = getEndValueByShortestPath(_key, _startValue, _endValue);\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n\n      return {\n        start: startViewportProps,\n        end: endViewportProps\n      };\n    }\n  }, {\n    key: \"interpolateProps\",\n    value: function interpolateProps(startProps, endProps, t) {\n      var viewport = flyToViewport(startProps, endProps, t, this.props);\n\n      var _iterator3 = _createForOfIteratorHelper(LINEARLY_INTERPOLATED_PROPS),\n          _step3;\n\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var key = _step3.value;\n          viewport[key] = lerp(startProps[key], endProps[key], t);\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n\n      return viewport;\n    }\n  }, {\n    key: \"getDuration\",\n    value: function getDuration(startProps, endProps) {\n      var transitionDuration = endProps.transitionDuration;\n\n      if (transitionDuration === 'auto') {\n        transitionDuration = getFlyToDuration(startProps, endProps, this.props);\n      }\n\n      return transitionDuration;\n    }\n  }]);\n\n  return ViewportFlyToInterpolator;\n}(TransitionInterpolator);\n\nexport { ViewportFlyToInterpolator as default };","map":{"version":3,"sources":["../../../../src/utils/transition/viewport-fly-to-interpolator.js"],"names":["VIEWPORT_TRANSITION_PROPS","REQUIRED_PROPS","LINEARLY_INTERPOLATED_PROPS","DEFAULT_OPTS","speed","curve","ViewportFlyToInterpolator","TransitionInterpolator","props","Object","startProps","endProps","startViewportProps","endViewportProps","key","startValue","endValue","assert","isValid","getEndValueByShortestPath","start","end","t","viewport","flyToViewport","lerp","transitionDuration","getFlyToDuration"],"mappings":"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","sourcesContent":["import assert from '../assert';\nimport TransitionInterpolator from './transition-interpolator';\n\nimport {flyToViewport, getFlyToDuration} from 'viewport-mercator-project';\nimport {isValid, getEndValueByShortestPath} from './transition-utils';\nimport {lerp} from '../math-utils';\n\nconst VIEWPORT_TRANSITION_PROPS = ['longitude', 'latitude', 'zoom', 'bearing', 'pitch'];\nconst REQUIRED_PROPS = ['latitude', 'longitude', 'zoom', 'width', 'height'];\nconst LINEARLY_INTERPOLATED_PROPS = ['bearing', 'pitch'];\nconst DEFAULT_OPTS = {\n  speed: 1.2,\n  curve: 1.414\n  // screenSpeed and maxDuration are used only if specified\n};\n\n/**\n * This class adapts mapbox-gl-js Map#flyTo animation so it can be used in\n * react/redux architecture.\n * mapbox-gl-js flyTo : https://www.mapbox.com/mapbox-gl-js/api/#map#flyto.\n * It implements “Smooth and efficient zooming and panning.” algorithm by\n * \"Jarke J. van Wijk and Wim A.A. Nuij\"\n */\nexport default class ViewportFlyToInterpolator extends TransitionInterpolator {\n  propNames = VIEWPORT_TRANSITION_PROPS;\n\n  /**\n   * @param props {Object}\n   - `props.curve` (Number, optional, default: 1.414) - The zooming \"curve\" that will occur along the flight path.\n   - `props.speed` (Number, optional, default: 1.2) - The average speed of the animation defined in relation to `options.curve`, it linearly affects the duration, higher speed returns smaller durations and vice versa.\n   - `props.screenSpeed` (Number, optional) - The average speed of the animation measured in screenfuls per second. Similar to `opts.speed` it linearly affects the duration,  when specified `opts.speed` is ignored.\n   - `props.maxDuration` (Number, optional) - Maximum duration in milliseconds, if calculated duration exceeds this value, `0` is returned.\n   */\n  constructor(props = {}) {\n    super();\n\n    this.props = Object.assign({}, DEFAULT_OPTS, props);\n  }\n\n  initializeProps(startProps, endProps) {\n    const startViewportProps = {};\n    const endViewportProps = {};\n\n    // Check minimum required props\n    for (const key of REQUIRED_PROPS) {\n      const startValue = startProps[key];\n      const endValue = endProps[key];\n      assert(isValid(startValue) && isValid(endValue), `${key} must be supplied for transition`);\n      startViewportProps[key] = startValue;\n      endViewportProps[key] = getEndValueByShortestPath(key, startValue, endValue);\n    }\n\n    for (const key of LINEARLY_INTERPOLATED_PROPS) {\n      const startValue = startProps[key] || 0;\n      const endValue = endProps[key] || 0;\n      startViewportProps[key] = startValue;\n      endViewportProps[key] = getEndValueByShortestPath(key, startValue, endValue);\n    }\n\n    return {\n      start: startViewportProps,\n      end: endViewportProps\n    };\n  }\n\n  interpolateProps(startProps, endProps, t) {\n    const viewport = flyToViewport(startProps, endProps, t, this.props);\n\n    // Linearly interpolate 'bearing' and 'pitch' if exist.\n    for (const key of LINEARLY_INTERPOLATED_PROPS) {\n      viewport[key] = lerp(startProps[key], endProps[key], t);\n    }\n\n    return viewport;\n  }\n\n  // computes the transition duration\n  getDuration(startProps, endProps) {\n    let {transitionDuration} = endProps;\n    if (transitionDuration === 'auto') {\n      // auto calculate duration based on start and end props\n      transitionDuration = getFlyToDuration(startProps, endProps, this.props);\n    }\n    return transitionDuration;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}