{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport * as React from 'react';\nimport { useRef, useState, useEffect, useCallback } from 'react';\nimport * as PropTypes from 'prop-types';\nimport useMapControl, { mapControlDefaultProps, mapControlPropTypes } from './use-map-control';\nimport { getDynamicPosition, ANCHOR_POSITION } from '../utils/dynamic-position';\nimport { crispPercentage, crispPixel } from '../utils/crisp-pixel';\nvar propTypes = Object.assign({}, mapControlPropTypes, {\n  className: PropTypes.string,\n  longitude: PropTypes.number.isRequired,\n  latitude: PropTypes.number.isRequired,\n  altitude: PropTypes.number,\n  offsetLeft: PropTypes.number,\n  offsetTop: PropTypes.number,\n  tipSize: PropTypes.number,\n  closeButton: PropTypes.bool,\n  closeOnClick: PropTypes.bool,\n  anchor: PropTypes.oneOf(Object.keys(ANCHOR_POSITION)),\n  dynamicPosition: PropTypes.bool,\n  sortByDepth: PropTypes.bool,\n  onClose: PropTypes.func\n});\nvar defaultProps = Object.assign({}, mapControlDefaultProps, {\n  className: '',\n  altitude: 0,\n  offsetLeft: 0,\n  offsetTop: 0,\n  tipSize: 10,\n  anchor: 'bottom',\n  dynamicPosition: true,\n  sortByDepth: false,\n  closeButton: true,\n  closeOnClick: true,\n  onClose: function onClose() {}\n});\n\nfunction getPosition(props, viewport, el, _ref) {\n  var _ref2 = _slicedToArray(_ref, 2),\n      x = _ref2[0],\n      y = _ref2[1];\n\n  var anchor = props.anchor,\n      dynamicPosition = props.dynamicPosition,\n      tipSize = props.tipSize;\n\n  if (el) {\n    return dynamicPosition ? getDynamicPosition({\n      x: x,\n      y: y,\n      anchor: anchor,\n      padding: tipSize,\n      width: viewport.width,\n      height: viewport.height,\n      selfWidth: el.clientWidth,\n      selfHeight: el.clientHeight\n    }) : anchor;\n  }\n\n  return anchor;\n}\n\nfunction getContainerStyle(props, viewport, el, _ref3, positionType) {\n  var _ref4 = _slicedToArray(_ref3, 3),\n      x = _ref4[0],\n      y = _ref4[1],\n      z = _ref4[2];\n\n  var offsetLeft = props.offsetLeft,\n      offsetTop = props.offsetTop,\n      sortByDepth = props.sortByDepth;\n  var anchorPosition = ANCHOR_POSITION[positionType];\n  var left = x + offsetLeft;\n  var top = y + offsetTop;\n  var xPercentage = crispPercentage(el, -anchorPosition.x * 100);\n  var yPercentage = crispPercentage(el, -anchorPosition.y * 100, 'y');\n  var style = {\n    position: 'absolute',\n    transform: \"\\n      translate(\".concat(xPercentage, \"%, \").concat(yPercentage, \"%)\\n      translate(\").concat(crispPixel(left), \"px, \").concat(crispPixel(top), \"px)\\n    \"),\n    display: undefined,\n    zIndex: undefined\n  };\n\n  if (!sortByDepth) {\n    return style;\n  }\n\n  if (z > 1 || z < -1 || x < 0 || x > viewport.width || y < 0 || y > viewport.height) {\n    style.display = 'none';\n  } else {\n    style.zIndex = Math.floor((1 - z) / 2 * 100000);\n  }\n\n  return style;\n}\n\nfunction onClick(evt, _ref5) {\n  var props = _ref5.props,\n      context = _ref5.context;\n\n  if (props.closeOnClick || evt.target.className === 'mapboxgl-popup-close-button') {\n    props.onClose();\n\n    if (context.eventManager) {\n      context.eventManager.once('click', function (e) {\n        return e.stopPropagation();\n      }, evt.target);\n    }\n  }\n}\n\nfunction Popup(props) {\n  var contentRef = useRef(null);\n  var thisRef = useMapControl(_objectSpread(_objectSpread({}, props), {}, {\n    onClick: onClick\n  }));\n  var context = thisRef.context,\n      containerRef = thisRef.containerRef;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      setLoaded = _useState2[1];\n\n  useEffect(function () {\n    setLoaded(true);\n  }, [contentRef.current]);\n  var viewport = context.viewport;\n  var className = props.className,\n      longitude = props.longitude,\n      latitude = props.latitude,\n      altitude = props.altitude,\n      tipSize = props.tipSize,\n      closeButton = props.closeButton,\n      children = props.children;\n  var position = viewport.project([longitude, latitude, altitude]);\n  var positionType = getPosition(props, viewport, contentRef.current, position);\n  var containerStyle = getContainerStyle(props, viewport, containerRef.current, position, positionType);\n  var onReactClick = useCallback(function (e) {\n    return !context.eventManager && onClick(e, thisRef);\n  }, [context.eventManager]);\n  return React.createElement(\"div\", {\n    className: \"mapboxgl-popup mapboxgl-popup-anchor-\".concat(positionType, \" \").concat(className),\n    style: containerStyle,\n    ref: containerRef\n  }, React.createElement(\"div\", {\n    key: \"tip\",\n    className: \"mapboxgl-popup-tip\",\n    style: {\n      borderWidth: tipSize\n    }\n  }), React.createElement(\"div\", {\n    key: \"content\",\n    ref: contentRef,\n    className: \"mapboxgl-popup-content\",\n    onClick: onReactClick\n  }, closeButton && React.createElement(\"button\", {\n    key: \"close-button\",\n    className: \"mapboxgl-popup-close-button\",\n    type: \"button\"\n  }, \"\\xD7\"), children));\n}\n\nPopup.propTypes = propTypes;\nPopup.defaultProps = defaultProps;\nexport default React.memo(Popup);","map":{"version":3,"sources":["../../../src/components/popup.js"],"names":["propTypes","className","PropTypes","longitude","latitude","altitude","offsetLeft","offsetTop","tipSize","closeButton","closeOnClick","anchor","Object","dynamicPosition","sortByDepth","onClose","func","defaultProps","x","y","props","getDynamicPosition","padding","width","viewport","height","selfWidth","el","selfHeight","clientHeight","z","anchorPosition","ANCHOR_POSITION","left","top","xPercentage","crispPercentage","yPercentage","style","position","transform","crispPixel","display","zIndex","undefined","Math","context","evt","e","contentRef","useRef","thisRef","useMapControl","onClick","containerRef","setLoaded","useState","useEffect","children","positionType","getPosition","containerStyle","getContainerStyle","onReactClick","useCallback","borderWidth","Popup","React"],"mappings":"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","sourcesContent":["// Copyright (c) 2015 Uber Technologies, Inc.\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nimport * as React from 'react';\nimport {useRef, useState, useEffect, useCallback} from 'react';\nimport * as PropTypes from 'prop-types';\nimport useMapControl, {mapControlDefaultProps, mapControlPropTypes} from './use-map-control';\n\nimport {getDynamicPosition, ANCHOR_POSITION} from '../utils/dynamic-position';\n\nimport {crispPercentage, crispPixel} from '../utils/crisp-pixel';\n\nconst propTypes = Object.assign({}, mapControlPropTypes, {\n  // Custom className\n  className: PropTypes.string,\n  // Longitude of the anchor point\n  longitude: PropTypes.number.isRequired,\n  // Latitude of the anchor point\n  latitude: PropTypes.number.isRequired,\n  // Altitude of the anchor point\n  altitude: PropTypes.number,\n  // Offset from the left\n  offsetLeft: PropTypes.number,\n  // Offset from the top\n  offsetTop: PropTypes.number,\n  // Size of the tip\n  tipSize: PropTypes.number,\n  // Whether to show close button\n  closeButton: PropTypes.bool,\n  // Whether to close on click\n  closeOnClick: PropTypes.bool,\n  // The popup's location relative to the coordinate\n  anchor: PropTypes.oneOf(Object.keys(ANCHOR_POSITION)),\n  // Whether the popup anchor should be auto-adjusted to fit within the container\n  dynamicPosition: PropTypes.bool,\n  // Whether popups should be sorted by depth. Useful when using multiple popups with tilted map.\n  sortByDepth: PropTypes.bool,\n  // Callback when component is closed\n  onClose: PropTypes.func\n});\n\nconst defaultProps = Object.assign({}, mapControlDefaultProps, {\n  className: '',\n  altitude: 0,\n  offsetLeft: 0,\n  offsetTop: 0,\n  tipSize: 10,\n  anchor: 'bottom',\n  dynamicPosition: true,\n  sortByDepth: false,\n  closeButton: true,\n  closeOnClick: true,\n  onClose: () => {}\n});\n\nfunction getPosition(props, viewport, el, [x, y]) {\n  const {anchor, dynamicPosition, tipSize} = props;\n\n  if (el) {\n    return dynamicPosition\n      ? getDynamicPosition({\n          x,\n          y,\n          anchor,\n          padding: tipSize,\n          width: viewport.width,\n          height: viewport.height,\n          selfWidth: el.clientWidth,\n          selfHeight: el.clientHeight\n        })\n      : anchor;\n  }\n\n  return anchor;\n}\n\nfunction getContainerStyle(props, viewport, el, [x, y, z], positionType) {\n  const {offsetLeft, offsetTop, sortByDepth} = props;\n  const anchorPosition = ANCHOR_POSITION[positionType];\n  const left = x + offsetLeft;\n  const top = y + offsetTop;\n\n  const xPercentage = crispPercentage(el, -anchorPosition.x * 100);\n  const yPercentage = crispPercentage(el, -anchorPosition.y * 100, 'y');\n  const style = {\n    position: 'absolute',\n    transform: `\n      translate(${xPercentage}%, ${yPercentage}%)\n      translate(${crispPixel(left)}px, ${crispPixel(top)}px)\n    `,\n    display: undefined,\n    zIndex: undefined\n  };\n\n  if (!sortByDepth) {\n    return style;\n  }\n  if (z > 1 || z < -1 || x < 0 || x > viewport.width || y < 0 || y > viewport.height) {\n    // clipped\n    style.display = 'none';\n  } else {\n    // use z-index to rearrange components\n    style.zIndex = Math.floor(((1 - z) / 2) * 100000);\n  }\n\n  return style;\n}\n\nfunction onClick(evt, {props, context}) {\n  if (props.closeOnClick || evt.target.className === 'mapboxgl-popup-close-button') {\n    props.onClose();\n\n    if (context.eventManager) {\n      // Using with InteractiveMap\n      // After we call `onClose` on `anyclick`, this component will be unmounted\n      // at which point we unregister the event listeners and stop blocking propagation.\n      // Then after a short delay a `click` event will fire\n      // Attach a one-time event listener here to prevent it from triggering `onClick` of the base map\n      context.eventManager.once('click', e => e.stopPropagation(), evt.target);\n    }\n  }\n}\n\n/*\n * PureComponent doesn't update when context changes.\n * The only way is to implement our own shouldComponentUpdate here. Considering\n * the parent component (StaticMap or InteractiveMap) is pure, and map re-render\n * is almost always triggered by a viewport change, we almost definitely need to\n * recalculate the popup's position when the parent re-renders.\n */\nfunction Popup(props) {\n  const contentRef = useRef(null);\n  const thisRef = useMapControl({...props, onClick});\n  const {context, containerRef} = thisRef;\n  const [, setLoaded] = useState(false);\n\n  useEffect(() => {\n    // Container just got a size, re-calculate position\n    setLoaded(true);\n  }, [contentRef.current]);\n\n  const {viewport} = context;\n  const {className, longitude, latitude, altitude, tipSize, closeButton, children} = props;\n\n  const position = viewport.project([longitude, latitude, altitude]);\n\n  const positionType = getPosition(props, viewport, contentRef.current, position);\n  const containerStyle = getContainerStyle(\n    props,\n    viewport,\n    containerRef.current,\n    position,\n    positionType\n  );\n\n  // If eventManager does not exist (using with static map), listen to React event\n  const onReactClick = useCallback(e => !context.eventManager && onClick(e, thisRef), [\n    context.eventManager\n  ]);\n\n  return (\n    <div\n      className={`mapboxgl-popup mapboxgl-popup-anchor-${positionType} ${className}`}\n      // @ts-ignore\n      style={containerStyle}\n      ref={containerRef}\n    >\n      <div key=\"tip\" className=\"mapboxgl-popup-tip\" style={{borderWidth: tipSize}} />\n      <div key=\"content\" ref={contentRef} className=\"mapboxgl-popup-content\" onClick={onReactClick}>\n        {closeButton && (\n          <button key=\"close-button\" className=\"mapboxgl-popup-close-button\" type=\"button\">\n            ×\n          </button>\n        )}\n        {children}\n      </div>\n    </div>\n  );\n}\n\nPopup.propTypes = propTypes;\nPopup.defaultProps = defaultProps;\n\nexport default React.memo(Popup);\n"]},"metadata":{},"sourceType":"module"}