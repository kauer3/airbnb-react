{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LENOVO\\\\Documents\\\\VSCode\\\\airbnb-clone\\\\airbnb-web\\\\src\\\\pages\\\\App\\\\index.js\";\nimport React, { Component, Fragment } from \"react\"; // import Dimensions from \"react-dimensions\"; // TODO can't install react-dimensions\n\nimport { Container, ButtonContainer } from \"./styles\";\nimport MapGL from \"react-map-gl\";\nimport PropTypes from \"prop-types\";\nimport debounce from \"lodash/debounce\";\nimport api from \"../../services/api\";\nimport { withRouter } from \"react-router-dom\";\nimport { logout } from \"../../services/auth\";\nimport Properties from \"./components/Properties\";\nimport Button from \"./components/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TOKEN = \"pk.eyJ1Ijoia2F1ZXIzIiwiYSI6ImNrbm8za2M1cDEya2Yyb3BlcDZmcTA4a2oifQ.2TyL3eWNmHlGeaAwD0BweA\";\n\nclass Map extends Component {\n  constructor() {\n    super();\n    this.state = {\n      viewport: {\n        latitude: -27.2108001,\n        longitude: -49.6446024,\n        zoom: 12.8,\n        bearing: 0,\n        pitch: 0\n      },\n      properties: []\n    };\n\n    this.loadProperties = async () => {\n      const {\n        latitude,\n        longitude\n      } = this.state.viewport;\n\n      try {\n        const response = await api.get(\"/properties\", {\n          params: {\n            latitude,\n            longitude\n          }\n        });\n        this.setState({\n          properties: response.data\n        });\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    this.handleLogout = e => {\n      logout();\n      this.props.history.push(\"/\");\n    };\n\n    this.updatePropertiesLocalization = debounce(this.updatePropertiesLocalization, 500);\n  }\n\n  componentDidMount() {\n    this.loadProperties();\n  }\n\n  updatePropertiesLocalization() {\n    this.loadProperties();\n  }\n\n  renderActions() {\n    return /*#__PURE__*/_jsxDEV(ButtonContainer, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        color: \"#222\",\n        onClick: this.handleLogout,\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa fa-times\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this);\n  }\n\n  render() {\n    // const { containerWidth: width, containerHeight: height } = this.props;\n    const {\n      properties\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(MapGL // width={width}\n      // height={height}\n      // Hardcode size values so map can be displayed without react-dimensions\n      , {\n        width: \"1370px\",\n        height: \"650px\",\n        ...this.state.viewport,\n        mapStyle: \"mapbox://styles/mapbox/dark-v9\",\n        mapboxApiAccessToken: TOKEN,\n        onViewportChange: viewport => this.setState({\n          viewport\n        }),\n        onViewStateChange: this.updatePropertiesLocalization.bind(this),\n        children: /*#__PURE__*/_jsxDEV(Properties, {\n          properties: properties\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), this.renderActions()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this);\n  }\n\n} // const DimensionedMap = Dimensions()(Map); // TODO can't install react-dimensions\n\n\nMap.propTypes = {\n  containerWidth: PropTypes.number.isRequired,\n  containerHeight: PropTypes.number.isRequired\n};\nconst DimensionedMap = withRouter(Map);\n_c = DimensionedMap;\n\nconst App = () => /*#__PURE__*/_jsxDEV(Container, {\n  children: /*#__PURE__*/_jsxDEV(DimensionedMap, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 105,\n  columnNumber: 3\n}, this);\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"DimensionedMap\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["C:/Users/LENOVO/Documents/VSCode/airbnb-clone/airbnb-web/src/pages/App/index.js"],"names":["React","Component","Fragment","Container","ButtonContainer","MapGL","PropTypes","debounce","api","withRouter","logout","Properties","Button","TOKEN","Map","constructor","state","viewport","latitude","longitude","zoom","bearing","pitch","properties","loadProperties","response","get","params","setState","data","err","console","log","handleLogout","e","props","history","push","updatePropertiesLocalization","componentDidMount","renderActions","render","bind","propTypes","containerWidth","number","isRequired","containerHeight","DimensionedMap","App"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\n// import Dimensions from \"react-dimensions\"; // TODO can't install react-dimensions\nimport { Container, ButtonContainer } from \"./styles\";\nimport MapGL from \"react-map-gl\";\nimport PropTypes from \"prop-types\";\nimport debounce from \"lodash/debounce\";\nimport api from \"../../services/api\";\nimport { withRouter } from \"react-router-dom\";\nimport { logout } from \"../../services/auth\";\nimport Properties from \"./components/Properties\";\nimport Button from \"./components/Button\";\n\nconst TOKEN =\n  \"pk.eyJ1Ijoia2F1ZXIzIiwiYSI6ImNrbm8za2M1cDEya2Yyb3BlcDZmcTA4a2oifQ.2TyL3eWNmHlGeaAwD0BweA\";\n\nclass Map extends Component {\n  static propTypes = {\n    containerWidth: PropTypes.number.isRequired,\n    containerHeight: PropTypes.number.isRequired\n  };\n\n  constructor() {\n    super();\n    this.updatePropertiesLocalization = debounce(\n      this.updatePropertiesLocalization,\n      500\n    );\n  }\n\n  state = {\n    viewport: {\n      latitude: -27.2108001,\n      longitude: -49.6446024,\n      zoom: 12.8,\n      bearing: 0,\n      pitch: 0\n    },\n\n    properties: []\n  };\n\n  componentDidMount() {\n    this.loadProperties();\n  }\n\n  updatePropertiesLocalization() {\n    this.loadProperties();\n  }\n\n  loadProperties = async () => {\n    const { latitude, longitude } = this.state.viewport;\n    try {\n      const response = await api.get(\"/properties\", {\n        params: { latitude, longitude }\n      });\n      this.setState({ properties: response.data });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  handleLogout = e => {\n    logout();\n    this.props.history.push(\"/\");\n  };\n\n  renderActions() {\n    return (\n      <ButtonContainer>\n        <Button color=\"#222\" onClick={this.handleLogout}>\n          <i className=\"fa fa-times\" />\n        </Button>\n      </ButtonContainer>\n    );\n  }\n\n  render() {\n    // const { containerWidth: width, containerHeight: height } = this.props;\n    const {properties} = this.state;\n    return (\n      <Fragment>\n        <MapGL\n          // width={width}\n          // height={height}\n          // Hardcode size values so map can be displayed without react-dimensions\n          width=\"1370px\"\n          height=\"650px\"\n          {...this.state.viewport}\n          mapStyle=\"mapbox://styles/mapbox/dark-v9\"\n          mapboxApiAccessToken={TOKEN}\n          onViewportChange={viewport => this.setState({viewport})}\n          onViewStateChange={this.updatePropertiesLocalization.bind(this)}\n        >\n          <Properties properties={properties} />\n        </MapGL>\n        {this.renderActions()}\n      </Fragment>\n    );\n  }\n}\n\n// const DimensionedMap = Dimensions()(Map); // TODO can't install react-dimensions\nconst DimensionedMap = withRouter(Map);\nconst App = () => (\n  <Container>\n    <DimensionedMap />\n  </Container>\n);\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}