{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport { useContext, useEffect, useMemo, useState, useRef } from 'react';\nimport * as PropTypes from 'prop-types';\nimport MapContext from './map-context';\nimport assert from '../utils/assert';\nimport deepEqual from '../utils/deep-equal';\nvar LAYER_TYPES = ['fill', 'line', 'symbol', 'circle', 'fill-extrusion', 'raster', 'background', 'heatmap', 'hillshade', 'sky'];\nvar propTypes = {\n  type: PropTypes.oneOf(LAYER_TYPES).isRequired,\n  id: PropTypes.string,\n  source: PropTypes.string,\n  beforeId: PropTypes.string\n};\n\nfunction diffLayerStyles(map, id, props, prevProps) {\n  var _props$layout = props.layout,\n      layout = _props$layout === void 0 ? {} : _props$layout,\n      _props$paint = props.paint,\n      paint = _props$paint === void 0 ? {} : _props$paint,\n      filter = props.filter,\n      minzoom = props.minzoom,\n      maxzoom = props.maxzoom,\n      beforeId = props.beforeId,\n      otherProps = _objectWithoutProperties(props, [\"layout\", \"paint\", \"filter\", \"minzoom\", \"maxzoom\", \"beforeId\"]);\n\n  if (beforeId !== prevProps.beforeId) {\n    map.moveLayer(id, beforeId);\n  }\n\n  if (layout !== prevProps.layout) {\n    var prevLayout = prevProps.layout || {};\n\n    for (var key in layout) {\n      if (!deepEqual(layout[key], prevLayout[key])) {\n        map.setLayoutProperty(id, key, layout[key]);\n      }\n    }\n\n    for (var _key in prevLayout) {\n      if (!layout.hasOwnProperty(_key)) {\n        map.setLayoutProperty(id, _key, undefined);\n      }\n    }\n  }\n\n  if (paint !== prevProps.paint) {\n    var prevPaint = prevProps.paint || {};\n\n    for (var _key2 in paint) {\n      if (!deepEqual(paint[_key2], prevPaint[_key2])) {\n        map.setPaintProperty(id, _key2, paint[_key2]);\n      }\n    }\n\n    for (var _key3 in prevPaint) {\n      if (!paint.hasOwnProperty(_key3)) {\n        map.setPaintProperty(id, _key3, undefined);\n      }\n    }\n  }\n\n  if (!deepEqual(filter, prevProps.filter)) {\n    map.setFilter(id, filter);\n  }\n\n  if (minzoom !== prevProps.minzoom || maxzoom !== prevProps.maxzoom) {\n    map.setLayerZoomRange(id, minzoom, maxzoom);\n  }\n\n  for (var _key4 in otherProps) {\n    if (!deepEqual(otherProps[_key4], prevProps[_key4])) {\n      map.setLayerProperty(id, _key4, otherProps[_key4]);\n    }\n  }\n}\n\nfunction createLayer(map, id, props) {\n  if (map.style && map.style._loaded) {\n    var options = _objectSpread(_objectSpread({}, props), {}, {\n      id: id\n    });\n\n    delete options.beforeId;\n    map.addLayer(options, props.beforeId);\n  }\n}\n\nfunction updateLayer(map, id, props, prevProps) {\n  assert(props.id === prevProps.id, 'layer id changed');\n  assert(props.type === prevProps.type, 'layer type changed');\n\n  try {\n    diffLayerStyles(map, id, props, prevProps);\n  } catch (error) {\n    console.warn(error);\n  }\n}\n\nvar layerCounter = 0;\n\nfunction Layer(props) {\n  var context = useContext(MapContext);\n  var propsRef = useRef({\n    id: props.id,\n    type: props.type\n  });\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      setStyleLoaded = _useState2[1];\n\n  var id = useMemo(function () {\n    return props.id || \"jsx-layer-\".concat(layerCounter++);\n  }, []);\n  var map = context.map;\n  useEffect(function () {\n    if (map) {\n      var forceUpdate = function forceUpdate() {\n        return setStyleLoaded(function (version) {\n          return version + 1;\n        });\n      };\n\n      map.on('styledata', forceUpdate);\n      return function () {\n        map.off('styledata', forceUpdate);\n\n        if (map.style && map.style._loaded) {\n          map.removeLayer(id);\n        }\n      };\n    }\n\n    return undefined;\n  }, [map]);\n  var layer = map && map.style && map.getLayer(id);\n\n  if (layer) {\n    updateLayer(map, id, props, propsRef.current);\n  } else {\n    createLayer(map, id, props);\n  }\n\n  propsRef.current = props;\n  return null;\n}\n\nLayer.propTypes = propTypes;\nexport default Layer;","map":{"version":3,"sources":["../../../src/components/layer.js"],"names":["LAYER_TYPES","propTypes","type","PropTypes","id","source","beforeId","string","layout","paint","filter","minzoom","maxzoom","otherProps","props","prevProps","map","prevLayout","deepEqual","prevPaint","options","assert","diffLayerStyles","console","layerCounter","context","useContext","propsRef","useRef","setStyleLoaded","useState","useMemo","useEffect","forceUpdate","version","layer","updateLayer","createLayer","Layer"],"mappings":"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","sourcesContent":["// Copyright (c) 2015 Uber Technologies, Inc.\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nimport {useContext, useEffect, useMemo, useState, useRef} from 'react';\nimport * as PropTypes from 'prop-types';\nimport MapContext from './map-context';\nimport assert from '../utils/assert';\nimport deepEqual from '../utils/deep-equal';\n\nconst LAYER_TYPES = [\n  'fill',\n  'line',\n  'symbol',\n  'circle',\n  'fill-extrusion',\n  'raster',\n  'background',\n  'heatmap',\n  'hillshade',\n  'sky'\n];\n\nconst propTypes = {\n  type: PropTypes.oneOf(LAYER_TYPES).isRequired,\n  id: PropTypes.string,\n  source: PropTypes.string,\n  beforeId: PropTypes.string\n};\n\n/* eslint-disable complexity, max-statements */\nfunction diffLayerStyles(map, id, props, prevProps) {\n  const {layout = {}, paint = {}, filter, minzoom, maxzoom, beforeId, ...otherProps} = props;\n\n  if (beforeId !== prevProps.beforeId) {\n    map.moveLayer(id, beforeId);\n  }\n  if (layout !== prevProps.layout) {\n    const prevLayout = prevProps.layout || {};\n    for (const key in layout) {\n      if (!deepEqual(layout[key], prevLayout[key])) {\n        map.setLayoutProperty(id, key, layout[key]);\n      }\n    }\n    for (const key in prevLayout) {\n      if (!layout.hasOwnProperty(key)) {\n        map.setLayoutProperty(id, key, undefined);\n      }\n    }\n  }\n  if (paint !== prevProps.paint) {\n    const prevPaint = prevProps.paint || {};\n    for (const key in paint) {\n      if (!deepEqual(paint[key], prevPaint[key])) {\n        map.setPaintProperty(id, key, paint[key]);\n      }\n    }\n    for (const key in prevPaint) {\n      if (!paint.hasOwnProperty(key)) {\n        map.setPaintProperty(id, key, undefined);\n      }\n    }\n  }\n  if (!deepEqual(filter, prevProps.filter)) {\n    map.setFilter(id, filter);\n  }\n  if (minzoom !== prevProps.minzoom || maxzoom !== prevProps.maxzoom) {\n    map.setLayerZoomRange(id, minzoom, maxzoom);\n  }\n  for (const key in otherProps) {\n    if (!deepEqual(otherProps[key], prevProps[key])) {\n      map.setLayerProperty(id, key, otherProps[key]);\n    }\n  }\n}\n\nfunction createLayer(map, id, props) {\n  if (map.style && map.style._loaded) {\n    const options = {...props, id};\n    delete options.beforeId;\n\n    map.addLayer(options, props.beforeId);\n  }\n}\n\nfunction updateLayer(map, id, props, prevProps) {\n  assert(props.id === prevProps.id, 'layer id changed');\n  assert(props.type === prevProps.type, 'layer type changed');\n\n  try {\n    diffLayerStyles(map, id, props, prevProps);\n  } catch (error) {\n    console.warn(error); // eslint-disable-line\n  }\n}\n/* eslint-enable complexity, max-statements */\n\nlet layerCounter = 0;\n\nfunction Layer(props) {\n  const context = useContext(MapContext);\n  const propsRef = useRef({id: props.id, type: props.type});\n  const [, setStyleLoaded] = useState(0);\n\n  const id = useMemo(() => props.id || `jsx-layer-${layerCounter++}`, []);\n  const {map} = context;\n\n  useEffect(() => {\n    if (map) {\n      const forceUpdate = () => setStyleLoaded(version => version + 1);\n      map.on('styledata', forceUpdate);\n\n      return () => {\n        map.off('styledata', forceUpdate);\n        if (map.style && map.style._loaded) {\n          map.removeLayer(id);\n        }\n      };\n    }\n    return undefined;\n  }, [map]);\n\n  const layer = map && map.style && map.getLayer(id);\n  if (layer) {\n    updateLayer(map, id, props, propsRef.current);\n  } else {\n    createLayer(map, id, props);\n  }\n\n  // Store last rendered props\n  propsRef.current = props;\n\n  return null;\n}\n\nLayer.propTypes = propTypes;\n\nexport default Layer;\n"]},"metadata":{},"sourceType":"module"}